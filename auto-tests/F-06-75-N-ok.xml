<sequence_node size='3'>
  <variable_declaration_node qualifier='private' type ='integer'>
    <identifiers>
      < id = 'y' >
    </identifiers>
    <initializer>
    </initializer>
  </variable_declaration_node>
  <variable_declaration_node qualifier='private' type ='integer'>
    <identifiers>
      < id = 'x' >
    </identifiers>
    <initializer>
    </initializer>
  </variable_declaration_node>
  <function_definition_node name='og' qualifier='public' type ='integer'>
    <arguments>
    </arguments>
    <body>
      <block_node>
        <declarations>
        </declarations>
        <instructions>
          <sequence_node size='2'>
            <for_node>
              <condition>
                <sequence_node size='1'>
                  <le_node>
                    <rvalue_node>
                        <variable_node>y</variable_node>
                    </rvalue_node>
                    <integer_node>3</integer_node>
                  </le_node>
                </sequence_node>
              </condition>
              <block>
                <block_node>
                  <declarations>
                  </declarations>
                  <instructions>
                    <sequence_node size='2'>
                      <for_node>
                        <condition>
                          <sequence_node size='1'>
                            <le_node>
                              <rvalue_node>
                                  <variable_node>x</variable_node>
                              </rvalue_node>
                              <integer_node>50</integer_node>
                            </le_node>
                          </sequence_node>
                        </condition>
                        <block>
                          <if_node>
                            <condition>
                              <eq_node>
                                <rvalue_node>
                                    <variable_node>x</variable_node>
                                </rvalue_node>
                                <integer_node>10</integer_node>
                              </eq_node>
                            </condition>
                            <then>
                              <break_node>
                              </break_node>
                            </then>
                          </if_node>
                        </block>
                      </for_node>
                      <print_node>
                        <sequence_node size='1'>
                          <rvalue_node>
                              <variable_node>x</variable_node>
                          </rvalue_node>
                        </sequence_node>
                      </print_node>
                    </sequence_node>
                  </instructions>
                </block_node>
              </block>
            </for_node>
            <return_node>
              <tuple_node>
                <sequence_node size='1'>
                  <integer_node>0</integer_node>
                </sequence_node>
              </tuple_node>
            </return_node>
          </sequence_node>
        </instructions>
      </block_node>
    </body>
  </function_definition_node>
</sequence_node>
